@model BusinessLayer.MdlClasses.MdlFirm
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_FirmLayout.cshtml";
}


@section Header{
    @Html.Partial("~/Views/Shared/PartialViews/_Header.cshtml")
}

@section Sidebar{
    @Html.Partial("~/Views/Shared/PartialViews/_SideBar.cshtml")
}


@section BodyContent{

    @{
        //this is for kendo date picker.......
        string FormADate = Model.FormADateString == "" ? string.Format("{0:yyyy-MM-dd}", DateTime.Now) : string.Format("{0:yyyy-MM-dd}", DateTime.Parse(Model.FormADateString));
        string DeedAgreementDate = Model.DeedAgreementDateString == "" ? string.Format("{0:yyyy-MM-dd}", DateTime.Now) : string.Format("{0:yyyy-MM-dd}", DateTime.Parse(Model.DeedAgreementDateString));
        string FirmStartDate  = Model.FirmStartDateString == "" ? string.Format("{0:yyyy-MM-dd}", DateTime.Now) : string.Format("{0:yyyy-MM-dd}", DateTime.Parse(Model.FirmStartDateString));
        string SubmissionDateString = Model.SubmissionDateString == "" ? string.Format("{0:yyyy-MM-dd}", DateTime.Now) : string.Format("{0:yyyy-MM-dd}", DateTime.Parse(Model.SubmissionDateString));
        
    }

    

    <style>
        

        .form-control {
            width: 400px;
        }

        .k-widget .k-multiselect .k-header {
            width: 274px !important;
        }

        .k-multiselect-wrap {
            width: 274px !important;
        }

        .k-multiselect.k-header {
            width: 274px !important;
        }

        .k-multiselect-wrap li {
            background-color: #efe2e2;
        }

        .form-horizontal {
            margin-left: 40px;
        }
    </style>
    <h2>Firm Data Updation </h2>





    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="row">
                <div class="col-sm-6">

                    <label class="control-label ">Firm Name</label>
                    <div>
                        @Html.EditorFor(model => model.OrgName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OrgName, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="col-sm-6">

                    <label class="control-label">File No</label>

                    <div>
                        @Html.EditorFor(model => model.OrgRegNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OrgRegNo, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">

                    @Html.LabelFor(model => model.FormGNo, htmlAttributes: new { @class = "control-label " })
                    <div>
                        <input type="text" id="FormGNo" name="FormGNo" value="@Model.FormGNo" class="form-control" />
                        @Html.ValidationMessageFor(model => model.FormGNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-6">
                    @Html.LabelFor(model => model.NotaryPublicName, htmlAttributes: new { @class = "control-label " })
                    <div>
                        @Html.EditorFor(model => model.NotaryPublicName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NotaryPublicName, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    @Html.LabelFor(model => model.NotaryPublicLicenseNo, htmlAttributes: new { @class = "control-label " })
                    <div>
                        @Html.EditorFor(model => model.NotaryPublicLicenseNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NotaryPublicLicenseNo, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="col-sm-6">
                    @Html.LabelFor(model => model.FormADate, htmlAttributes: new { @class = "control-label " })
                    <div>
                        <input type="date" id="FormADate" value="@Model.FormADate.ToString("yyyy-MM-dd")" name="FormADate" class="form-control" />

                        @Html.ValidationMessageFor(model => model.FormADate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">

                    @Html.LabelFor(model => model.DeedAgreementDate, htmlAttributes: new { @class = "control-label " })
                    <div>
                        <input type="date" id="DeedAgreementDate" value="@Model.DeedAgreementDate.ToString("yyyy-MM-dd")" name="DeedAgreementDate" class="form-control" />
                  
                        @Html.ValidationMessageFor(model => model.DeedAgreementDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-sm-6">
                    @Html.LabelFor(model => model.SubmissionDate, htmlAttributes: new { @class = "control-label " })
                    <div>
                        <input type="date" id="SubmissionDate" value="@Model.SubmissionDate.ToString("yyyy-MM-dd")" name="SubmissionDate" class="form-control" />
                      
                        @Html.ValidationMessageFor(model => model.SubmissionDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    @Html.LabelFor(model => model.FirmStartDate, htmlAttributes: new { @class = "control-label " })
                    <div>
                        <input type="date" id="FirmStartDate" value="@Model.FirmStartDate.ToString("yyyy-MM-dd")" name="FirmStartDate" class="form-control" />
                       
                        @Html.ValidationMessageFor(model => model.FirmStartDate, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="col-sm-6">

                    @Html.LabelFor(model => model.DurationofFirm, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.DurationofFirm, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DurationofFirm, "", new { @class = "text-danger" })
                    </div>
                  
                </div>
            </div>         
            <div class="row">



                <div class="col-sm-6">
                    <label class="control-label">Remarks</label>

                    <div>
                        <textarea id="Remarks" name="Remarks" class="form-control">@Model.Remarks</textarea>

                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>           
            <input type="hidden" name="OrganizationID" value="@Model.OrganizationID" id="OrganizationID" />
            <div class="row">
                <div class="col-sm-6">

                    <div style="margin-top:10px">
                        <input type="submit" id="InsertFirmDetail" value="Update" class="btn btn-default" />
                    </div>

                </div>


                <div class="col-sm-6">
                </div>

            </div>
        </div>    }
    <script>
        $("#InsertFirmDetail").click(function () {
            $("#OrgName").removeClass("errorClass");
            $("#OrgRegNo").removeClass("errorClass");
            $("#NotaryPublicName").removeClass("errorClass");
            $("#NotaryPublicLicenseNo").removeClass("errorClass");
            $("#FormADate").removeClass("errorClass");
            $("#DeedAgreementDate").removeClass("errorClass");
            $("#SubmissionDate").removeClass("errorClass");
            $("#FirmStartDate").removeClass("errorClass");
            $("#DurationofFirm").removeClass("errorClass");           
            var isErrorOccurd = true;
            if ($.trim($("#OrgName").val()) == "") {
                $("#OrgName").addClass('errorClass');
                isErrorOccurd = false;
            }
            if ($.trim($("#OrgRegNo").val()) == "") {
                $("#OrgRegNo").addClass('errorClass');
                isErrorOccurd = false;
            }
            if ($.trim($("#NotaryPublicName").val()) == "") {
                $("#NotaryPublicName").addClass('errorClass');
                isErrorOccurd = false;
            }
            if ($.trim($("#NotaryPublicLicenseNo").val()) == "") {
                $("#NotaryPublicLicenseNo").addClass('errorClass');
                isErrorOccurd = false;
            }

            if ($.trim($("#FormADate").val()) == "") {
                $("#FormADate").addClass('errorClass');
                isErrorOccurd = false;
            }
            if ($.trim($("#DeedAgreementDate").val()) == "") {
                $("#DeedAgreementDate").addClass('errorClass');
                isErrorOccurd = false;
            }


            if ($.trim($("#SubmissionDate").val()) == "") {
                $("#SubmissionDate").addClass('errorClass');
                isErrorOccurd = false;
            }
            if ($.trim($("#FirmStartDate").val()) == "") {
                $("#FirmStartDate").addClass('errorClass');
                isErrorOccurd = false;
            }
            if ($.trim($("#DurationofFirm").val()) == "") {
                $("#DurationofFirm").addClass('errorClass');
                isErrorOccurd = false;
            }

           


  

            //if ($('#BankDistrict_ID option:selected').val() == 0) {

            //    $("#BankDistrict_ID_title").addClass("errorClass");
            //    isErrorOccurd = false;
            //}


            return isErrorOccurd;
        });




        $(document).ready(function () {


            $(".BankDistrict_ID").msDropDown();





        });

        //  $(document).ready(function () {
        // alert("hi");
        $("#Hiddenfield").change(function () {
            var multiselectBusiness = $("#Hiddenfield").data("kendoMultiSelect").value();
            //   console.log(multiselectBusiness);
            //  var selectedData = [];

            //  var multiSelectValueEmp = $("#BusinessType_ID").data("kendoMultiSelect").value(); //Get KendoMulitSelect all selected values
            //  console.log(multiSelectValueEmp);
            //$.each(multiSelectValueEmp, function (index, value) {
            //    // console.log(value);
            //    AssigneeIdsArray.push(value);
            //});

        });


        $("#Hiddenfield").kendoMultiSelect({
            filter: "startswith",
            dataTextField: "Label",
            dataValueField: "Value",

            dataSource: {
                //   type: "GET",
                dataType: "json",
                traditional: true,
                asyn: true,
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Firm/GETBussinessTypeinDD",
                        //complete: function () {
                        //    $("#BusinessType_ID").data("kendoDropDownList").select(-1);
                        //}
                    },

                }
            }
        });


        $('body').on('click', '#InsertFirmDetail', function () {
            var multiSelect = $("#Hiddenfield").data("kendoMultiSelect").value();

            if (multiSelect != "" || multiSelect != null) {
                $("#BusinessType_IDstring").val(multiSelect);

                // $(".k-multiselect-wrap .k-floatwrap").css("border", "2px solid red");

            }

         
        });


    </script>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}




@section FooterArea{
    @Html.Partial("~/Views/Shared/PartialViews/_Footer.cshtml")


}

